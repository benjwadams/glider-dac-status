version: '2.1'

services:
  flask_app:
    restart: always
    build: .
    ports:
      - 8000:5000
    volumes:
      # For Local
      - .:/glider-dac-status/
      # For Dev/Prod
      # - ./config.local.yml:/glider-dac-status/config.local.yml
      # - /tmp/status.json:/glider-dac-status/web/static/json/status.json
    depends_on:
      - redis
    command: gunicorn -w 4 -b "0.0.0.0:5000" app:app

  redis:
    restart: always
    image: redis
    volumes:
      - ./redis_data:/data:cached

  celery_worker:
    restart: always
    build: .
    volumes:
      # For Local
      - .:/glider-dac-status/
      # For Dev/Prod
      # - ./config.local.yml:/glider-dac-status/config.local.yml
      # - /tmp/status.json:/glider-dac-status/web/static/json/status.json
      # - /tmp/web/static/profiles/:/glider-dac-status/web/static/profiles/
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
    depends_on:
      - redis
    command: celery worker -A app.celery_app --loglevel=info

  celery_beat:
    volumes:
      # For Local
      - .:/glider-dac-status/
      # For Dev/Prod
      # - ./config.local.yml:/glider-dac-status/config.local.yml
    command: celery beat -A app.celery_app --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379

volumes:
  redis_data: